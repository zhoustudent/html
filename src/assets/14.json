{"code":0,"success":true,"data":{"has_more":true,"page_token":"1Mk9KmVSbmlHOm6AyiXFCK/EBANpGAyRrfAlbN0ng6g=","assessments_list":[{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"6960495402307062029","question_title":"请问如何实现JS限流调度器？","i18n_question_title":"请问如何实现JS限流调度器？","question_skill_list":[{"name":"算法","i18n_name":"算法","nick_name":null,"description":null}],"score":null,"content":null,"question_description":null,"i18n_question_description":null,"question_answer":null,"i18n_question_answer":null,"status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"6960495402307668237","question_title":"如何使用JAVAScript清空数组？","i18n_question_title":"如何使用JAVAScript清空数组？","question_skill_list":[{"name":"JavaScript","i18n_name":"JavaScript","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"JAVAScript怎么清空数组，请列举出三种方法并说出他们的区别。\n  \n  如\n  \n  ```JAVAscript\n  var arrayList = ['a','b','c','d','e','f'];\n  ```\n  \n  怎么清空 arrayList","i18n_question_description":"JAVAScript怎么清空数组，请列举出三种方法并说出他们的区别。\n  \n  如\n  \n  ```JAVAscript\n  var arrayList = ['a','b','c','d','e','f'];\n  ```\n  \n  怎么清空 arrayList","question_answer":null,"i18n_question_answer":null,"status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"6960495402307963149","question_title":"请写出代码的执行结果：console.log(1);\n  setTimeout(function() {\n  console.log(2);\n  }, 0);\n  console.log(3);","i18n_question_title":"请写出代码的执行结果：console.log(1);\n  setTimeout(function() {\n  console.log(2);\n  }, 0);\n  console.log(3);","question_skill_list":[{"name":"宏任务","i18n_name":"宏任务","nick_name":null,"description":null},{"name":"定时器","i18n_name":"定时器","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"console.log(1);\n  setTimeout(function() {\n  console.log(2);\n  }, 0);\n  console.log(3);","i18n_question_description":"console.log(1);\n  setTimeout(function() {\n  console.log(2);\n  }, 0);\n  console.log(3);","question_answer":"1\n  3\n  2","i18n_question_answer":"1\n  3\n  2","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"7034445595297334820","question_title":"请为所有数组对象添加一个findDuplicate(n)方法，用于返回该数组中出现频率>=n的元素列表","i18n_question_title":"请为所有数组对象添加一个findDuplicate(n)方法，用于返回该数组中出现频率>=n的元素列表","question_skill_list":[{"name":"编码","i18n_name":"编码","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"请为所有数组对象添加一个findDuplicate(n)方法，用于返回该数组中出现频率>=n的元素列表","i18n_question_description":"请为所有数组对象添加一个findDuplicate(n)方法，用于返回该数组中出现频率>=n的元素列表","question_answer":"{\"0\":{\"ops\":[{\"insert\":\"\\n\"},{\"insert\":\"Array.prototype.findDuplicate = function (n) {\\n\"},{\"insert\":\" var results = [];\\n\"},{\"insert\":\" if (typeof n != 'number' || isNaN(n)) {\\n\"},{\"insert\":\" return results;\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\" \\n\"},{\"insert\":\" var itemFreqs = {};\\n\"},{\"insert\":\" this.forEach(function (item) {\\n\"},{\"insert\":\" if (!itemFreqs[item]) {\\n\"},{\"insert\":\" itemFreqs[item] = 0;\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\" itemFreqs[item] ++;\\n\"},{\"insert\":\" });\\n\"},{\"insert\":\" \\n\"},{\"insert\":\" for (var item in itemFreqs) {\\n\"},{\"insert\":\" if (itemFreqs[item] >= n) {\\n\"},{\"insert\":\" results.push(item);\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\" \\n\"},{\"insert\":\" return results;\\n\"},{\"insert\":\"}\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"1. 2.5分及以下：写的问题比较多\\n\"},{\"insert\":\"2. 3.0分：正确使用Array.prototype来定义原型方法,数组基本操作和基本编码能力,对this对象的正确运用，有一些小的瑕疵\\n\"},{\"insert\":\"3. 3.5分：基本没有瑕疵，对参数也做了容错处理\\n\"},{\"insert\":\"4. 4.0分：\\n\"},{\"insert\":\"\\n\"}],\"zoneId\":\"0\",\"zoneType\":\"Z\"}}","i18n_question_answer":"{\"0\":{\"ops\":[{\"insert\":\"\\n\"},{\"insert\":\"Array.prototype.findDuplicate = function (n) {\\n\"},{\"insert\":\" var results = [];\\n\"},{\"insert\":\" if (typeof n != 'number' || isNaN(n)) {\\n\"},{\"insert\":\" return results;\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\" \\n\"},{\"insert\":\" var itemFreqs = {};\\n\"},{\"insert\":\" this.forEach(function (item) {\\n\"},{\"insert\":\" if (!itemFreqs[item]) {\\n\"},{\"insert\":\" itemFreqs[item] = 0;\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\" itemFreqs[item] ++;\\n\"},{\"insert\":\" });\\n\"},{\"insert\":\" \\n\"},{\"insert\":\" for (var item in itemFreqs) {\\n\"},{\"insert\":\" if (itemFreqs[item] >= n) {\\n\"},{\"insert\":\" results.push(item);\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\" \\n\"},{\"insert\":\" return results;\\n\"},{\"insert\":\"}\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"1. 2.5分及以下：写的问题比较多\\n\"},{\"insert\":\"2. 3.0分：正确使用Array.prototype来定义原型方法,数组基本操作和基本编码能力,对this对象的正确运用，有一些小的瑕疵\\n\"},{\"insert\":\"3. 3.5分：基本没有瑕疵，对参数也做了容错处理\\n\"},{\"insert\":\"4. 4.0分：\\n\"},{\"insert\":\"\\n\"}],\"zoneId\":\"0\",\"zoneType\":\"Z\"}}","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"6960495402308339981","question_title":"请描述CSS3中的新增伪类有哪些","i18n_question_title":"请描述CSS3中的新增伪类有哪些","question_skill_list":[{"name":"CSS3","i18n_name":"CSS3","nick_name":null,"description":null},{"name":"CSS","i18n_name":"CSS","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"伪类是什么，有哪些用途","i18n_question_description":"伪类是什么，有哪些用途","question_answer":"举例：\np:first-of-type 选择属于其父元素的首个  元素的每个  元素。\np:last-of-type  选择属于其父元素的最后  元素的每个  元素。\np:only-of-type    选择属于其父元素唯一的  元素的每个  元素。\np:only-child        选择属于其父元素的唯一子元素的每个  元素。\np:nth-child(2)  选择属于其父元素的第二个子元素的每个  元素。\n:after          在元素之前添加内容,也可以用来做清除浮动。\n:before         在元素之后添加内容\n:enabled          \n:disabled       控制表单控件的禁用状态。\n:checked        单选框或复选框被选中。","i18n_question_answer":"举例：\np:first-of-type 选择属于其父元素的首个  元素的每个  元素。\np:last-of-type  选择属于其父元素的最后  元素的每个  元素。\np:only-of-type    选择属于其父元素唯一的  元素的每个  元素。\np:only-child        选择属于其父元素的唯一子元素的每个  元素。\np:nth-child(2)  选择属于其父元素的第二个子元素的每个  元素。\n:after          在元素之前添加内容,也可以用来做清除浮动。\n:before         在元素之后添加内容\n:enabled          \n:disabled       控制表单控件的禁用状态。\n:checked        单选框或复选框被选中。","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"7021058255971780127","question_title":"构造函数和函数上下文","i18n_question_title":"构造函数和函数上下文","question_skill_list":[{"name":"JavaScript","i18n_name":"JavaScript","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"下面的变量 a 和变量 b 输出什么值？\nfunction Person(name) {\n  this.name = name;\n}\nPerson.prototype.print = function() {\n  return this.name;\n};\nPerson('abc');\nconst a = new Person('abc').print.call({});\nconsole.log(a);\nconst fn = () => {\n  this.x = 'z';\n};\nconst b = {x: 'y'};\nfn.call(b);\nconsole.log(b);","i18n_question_description":"下面的变量 a 和变量 b 输出什么值？\nfunction Person(name) {\n  this.name = name;\n}\nPerson.prototype.print = function() {\n  return this.name;\n};\nPerson('abc');\nconst a = new Person('abc').print.call({});\nconsole.log(a);\nconst fn = () => {\n  this.x = 'z';\n};\nconst b = {x: 'y'};\nfn.call(b);\nconsole.log(b);","question_answer":"a 是 undefined，b 是 `{x: 'y'}`\n能正确解释构造函数实例化并能熟练掌握 this 关键字的 2.5 分\n能掌握箭头函数的 3 分","i18n_question_answer":"a 是 undefined，b 是 `{x: 'y'}`\n能正确解释构造函数实例化并能熟练掌握 this 关键字的 2.5 分\n能掌握箭头函数的 3 分","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"7021058239916443172","question_title":"webSocket如何兼容低浏览器？","i18n_question_title":"webSocket如何兼容低浏览器？","question_skill_list":[{"name":"浏览器","i18n_name":"浏览器","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"webSocket如何兼容低浏览器？","i18n_question_description":"webSocket如何兼容低浏览器？","question_answer":"1.  Adobe Flash Socket \n2.  ActiveX HTMLFile (IE) \nGmail的Talk功能应用到了一个新的IE内置ActiveXObject ：new ActiveXObject(\"htmlfile\");\n此ActiveXObject使得IE有了\"安静的\"与服务器端建立HTTP长连接的能力，使得服务器可以\n主动向浏览器端Push数据，而不需要浏览器端反复向服务器端发出请求\n3.  基于 multipart 编码发送 XHR \n4.  基于长轮询的 XHR\n5.  JSONP 轮询（用于跨域的场景）\n1. 2.5分及以下：\n说出任意2个以下\n2. 3.0分：\n说出3个及以上\n3. 3.5分：\n能说出方法还能实现每一种原理\n4. 4.0分：","i18n_question_answer":"1.  Adobe Flash Socket \n2.  ActiveX HTMLFile (IE) \nGmail的Talk功能应用到了一个新的IE内置ActiveXObject ：new ActiveXObject(\"htmlfile\");\n此ActiveXObject使得IE有了\"安静的\"与服务器端建立HTTP长连接的能力，使得服务器可以\n主动向浏览器端Push数据，而不需要浏览器端反复向服务器端发出请求\n3.  基于 multipart 编码发送 XHR \n4.  基于长轮询的 XHR\n5.  JSONP 轮询（用于跨域的场景）\n1. 2.5分及以下：\n说出任意2个以下\n2. 3.0分：\n说出3个及以上\n3. 3.5分：\n能说出方法还能实现每一种原理\n4. 4.0分：","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"7021058239917131300","question_title":"正则表达式使用","i18n_question_title":"正则表达式使用","question_skill_list":[{"name":"JavaScript","i18n_name":"JavaScript","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"* 下面的代码输出是什么?解释下`( [ { \\ ^ $ | ) ? * + .`这些字符的作用？\n```js\n/^[about|women]$/.test('about');\n/^[about|women]$/.test('|');\n```\n* 用正则表达式，实现数字交换：\"1234 5678\" => \"5678 1234\"？\n* 用正则表达式移除所有标签，只留下innterText：\n```\nvar html = \"<a href='http://www.toutiao.com/'></a>嘿嘿头条赞赞\n\";\n```","i18n_question_description":"* 下面的代码输出是什么?解释下`( [ { \\ ^ $ | ) ? * + .`这些字符的作用？\n```js\n/^[about|women]$/.test('about');\n/^[about|women]$/.test('|');\n```\n* 用正则表达式，实现数字交换：\"1234 5678\" => \"5678 1234\"？\n* 用正则表达式移除所有标签，只留下innterText：\n```\nvar html = \"<a href='http://www.toutiao.com/'></a>嘿嘿头条赞赞\n\";\n```","question_answer":"1. `false true  // 考察基本元字符作用`\n2. `num.replace(/(\\d{4}) (\\d{4})/,\"$2 $1\"); // 反向引用考察`\n3. `html.replace(/<(?:.|\\s)*?>/g, \"\"); // replace函数`\n1. 2.5分及以下：不能答出来\n2. 3.0分：给出正确答案\n3. 3.5分：给出正确答案，并清晰给出答案原理\n4. 4.0分：","i18n_question_answer":"1. `false true  // 考察基本元字符作用`\n2. `num.replace(/(\\d{4}) (\\d{4})/,\"$2 $1\"); // 反向引用考察`\n3. `html.replace(/<(?:.|\\s)*?>/g, \"\"); // replace函数`\n1. 2.5分及以下：不能答出来\n2. 3.0分：给出正确答案\n3. 3.5分：给出正确答案，并清晰给出答案原理\n4. 4.0分：","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"6960495402307651853","question_title":"如何判断object是否是数组(array)？","i18n_question_title":"如何判断object是否是数组(array)？","question_skill_list":[{"name":"JavaScript","i18n_name":"JavaScript","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"怎么判断一个object是否是数组(array)，请至少写出2种方法。","i18n_question_description":"怎么判断一个object是否是数组(array)，请至少写出2种方法。","question_answer":null,"i18n_question_answer":null,"status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"7034445595297236516","question_title":"当一个js需要引入一个目录下的所有文件该如何处理","i18n_question_title":"当一个js需要引入一个目录下的所有文件该如何处理","question_skill_list":[{"name":"JavaScript","i18n_name":"JavaScript","nick_name":null,"description":null},{"name":"webpack","i18n_name":"webpack","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"有一个目录A,A目录下有个index.js，还有一个B目录，B目录下有30个js文件，如何在index.js下引入B目录所有的文件","i18n_question_description":"有一个目录A,A目录下有个index.js，还有一个B目录，B目录下有30个js文件，如何在index.js下引入B目录所有的文件","question_answer":"{\"0\":{\"ops\":[{\"insert\":\"在index.js增加如下代码：\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"javascript\\n\"},{\"insert\":\"var req = require.context('./box', true, /^(.*\\\\.(js$))[^.]*$/igm);\\n\"},{\"insert\":\"req.keys().forEach(function (key) {\\n\"},{\"insert\":\" req(key);\\n\"},{\"insert\":\"});\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"1. 2.5分及以下：\\n\"},{\"insert\":\"不了解模块化原理，没写出代码\\n\"},{\"insert\":\"2. 3.0分：\\n\"},{\"insert\":\"能给出思路，给出上述代码为合格\\n\"},{\"insert\":\"3. 3.5分：\\n\"},{\"insert\":\"4. 4.0分：\\n\"}],\"zoneId\":\"0\",\"zoneType\":\"Z\"}}","i18n_question_answer":"{\"0\":{\"ops\":[{\"insert\":\"在index.js增加如下代码：\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"javascript\\n\"},{\"insert\":\"var req = require.context('./box', true, /^(.*\\\\.(js$))[^.]*$/igm);\\n\"},{\"insert\":\"req.keys().forEach(function (key) {\\n\"},{\"insert\":\" req(key);\\n\"},{\"insert\":\"});\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"1. 2.5分及以下：\\n\"},{\"insert\":\"不了解模块化原理，没写出代码\\n\"},{\"insert\":\"2. 3.0分：\\n\"},{\"insert\":\"能给出思路，给出上述代码为合格\\n\"},{\"insert\":\"3. 3.5分：\\n\"},{\"insert\":\"4. 4.0分：\\n\"}],\"zoneId\":\"0\",\"zoneType\":\"Z\"}}","status_end_time":null,"assessment_create_time":null}],"BaseResp":{"StatusMessage":"SUCCESS","StatusCode":0,"Extra":null}},"message":"OK","special_case_code":0}
