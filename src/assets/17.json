{"code":0,"success":true,"data":{"has_more":true,"page_token":"7cptVN8cA64bld13LZSNYJmDSjxGj9/TPoyBz6UEmIY=","assessments_list":[{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"7034445595297269284","question_title":"nodejs 逐行读取文件","i18n_question_title":"nodejs 逐行读取文件","question_skill_list":[{"name":"JavaScript","i18n_name":"JavaScript","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"使用 nodejs 逐行读取文本文件内容","i18n_question_description":"使用 nodejs 逐行读取文本文件内容","question_answer":"{\"0\":{\"ops\":[{\"insert\":\"方案一：\\n\"},{\"insert\":\"javascript\\n\"},{\"insert\":\"const fs = require('fs');\\n\"},{\"insert\":\"const path = require('path');\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"const content = fs.readFileSync(path.join(__dirname, 'server.js'), 'utf8');\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"content.split(/\\\\r?\\\\n/ig).forEach((line, index) => {\\n\"},{\"insert\":\" console.log(line);\\n\"},{\"insert\":\"});\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"方案二：\\n\"},{\"insert\":\"javascript\\n\"},{\"insert\":\"const readline = require('readline');\\n\"},{\"insert\":\"const fs = require('fs');\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"const readStream = fs.createReadStream('./index.js')\\n\"},{\"insert\":\"const rl = readline.createInterface({\\n\"},{\"insert\":\" input: readStream\\n\"},{\"insert\":\"});\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"rl.on('line', line => {\\n\"},{\"insert\":\" // line 为每一行的内容\\n\"},{\"insert\":\" console.log(line);\\n\"},{\"insert\":\"});\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"1. 2.5分及以下：完全没有思路\\n\"},{\"insert\":\"2. 3.0分：给出可行方案，如果使用方案一，注意到换行的正则\\n\"},{\"insert\":\"3. 3.5分：熟悉 readline API\\n\"},{\"insert\":\"4. 4.0分：\\n\"}],\"zoneId\":\"0\",\"zoneType\":\"Z\"}}","i18n_question_answer":"{\"0\":{\"ops\":[{\"insert\":\"方案一：\\n\"},{\"insert\":\"javascript\\n\"},{\"insert\":\"const fs = require('fs');\\n\"},{\"insert\":\"const path = require('path');\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"const content = fs.readFileSync(path.join(__dirname, 'server.js'), 'utf8');\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"content.split(/\\\\r?\\\\n/ig).forEach((line, index) => {\\n\"},{\"insert\":\" console.log(line);\\n\"},{\"insert\":\"});\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"方案二：\\n\"},{\"insert\":\"javascript\\n\"},{\"insert\":\"const readline = require('readline');\\n\"},{\"insert\":\"const fs = require('fs');\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"const readStream = fs.createReadStream('./index.js')\\n\"},{\"insert\":\"const rl = readline.createInterface({\\n\"},{\"insert\":\" input: readStream\\n\"},{\"insert\":\"});\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"rl.on('line', line => {\\n\"},{\"insert\":\" // line 为每一行的内容\\n\"},{\"insert\":\" console.log(line);\\n\"},{\"insert\":\"});\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"1. 2.5分及以下：完全没有思路\\n\"},{\"insert\":\"2. 3.0分：给出可行方案，如果使用方案一，注意到换行的正则\\n\"},{\"insert\":\"3. 3.5分：熟悉 readline API\\n\"},{\"insert\":\"4. 4.0分：\\n\"}],\"zoneId\":\"0\",\"zoneType\":\"Z\"}}","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"6960495402308438285","question_title":"如何通过CSS3实现多行文字截断处理","i18n_question_title":"如何通过CSS3实现多行文字截断处理","question_skill_list":[{"name":"CSS","i18n_name":"CSS","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"用CSS分别实现单行截断和多行截断字符串，最后以...为结尾","i18n_question_description":"用CSS分别实现单行截断和多行截断字符串，最后以...为结尾","question_answer":null,"i18n_question_answer":null,"status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"7021058239916213796","question_title":"new Array 与 map 方法的使用","i18n_question_title":"new Array 与 map 方法的使用","question_skill_list":null,"score":null,"content":null,"question_description":"小明想要生成从 m 到 n 的连续数组 `[m, n)`，他写了如下代码:\n```\nfunction range(m, n) {\n    return new Array(n - m).map((_, idx) => m + idx);\n}\n```\n请问在不考虑 m 和 n 的取值时，他写的对吗？（如果不对，应该怎样修改）","i18n_question_description":"小明想要生成从 m 到 n 的连续数组 `[m, n)`，他写了如下代码:\n```\nfunction range(m, n) {\n    return new Array(n - m).map((_, idx) => m + idx);\n}\n```\n请问在不考虑 m 和 n 的取值时，他写的对吗？（如果不对，应该怎样修改）","question_answer":"他写的不对。\n原因在于\n 1. new Array(N) Creates an array with undefined pointers.\n 2. map callback is invoked only for indexes of the array which have assigned values.\n可以使用 `Array.fill`:\n```\nnew Array(n - m).fill(undefined).map((_, idx) => m + idx);\n```\n或者`apply`：\n```\nArray.apply(null, Array(n - m)).map((_, idx) => m + idx);\n```\n或者`spread`:\n```\n[...Array(n - m)].map((_, idx) => m + idx)\n```\n本题满分为5分。\n指出错误、说明原因并给出多种正确修改方法的，可得5分。\n指出错误、说明原因并作出正确修改的，可得4分。\n指出错误并说明原因，未给出正确修改的，可得3分。\n其余均不得分。","i18n_question_answer":"他写的不对。\n原因在于\n 1. new Array(N) Creates an array with undefined pointers.\n 2. map callback is invoked only for indexes of the array which have assigned values.\n可以使用 `Array.fill`:\n```\nnew Array(n - m).fill(undefined).map((_, idx) => m + idx);\n```\n或者`apply`：\n```\nArray.apply(null, Array(n - m)).map((_, idx) => m + idx);\n```\n或者`spread`:\n```\n[...Array(n - m)].map((_, idx) => m + idx)\n```\n本题满分为5分。\n指出错误、说明原因并给出多种正确修改方法的，可得5分。\n指出错误、说明原因并作出正确修改的，可得4分。\n指出错误并说明原因，未给出正确修改的，可得3分。\n其余均不得分。","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"6960495402307832077","question_title":"什么是闭包？请编程实现每隔1秒输出数组中的一个数字","i18n_question_title":"什么是闭包？请编程实现每隔1秒输出数组中的一个数字","question_skill_list":[{"name":"js","i18n_name":"js","nick_name":null,"description":null},{"name":"语言基础","i18n_name":"语言基础","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"解释下js中的闭包概念，解释OK，给出编程题目考察基本功","i18n_question_description":"解释下js中的闭包概念，解释OK，给出编程题目考察基本功","question_answer":null,"i18n_question_answer":null,"status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"7021058239904646663","question_title":"为什么需要child-process?","i18n_question_title":"为什么需要child-process?","question_skill_list":[{"name":"Node.js","i18n_name":"Node.js","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"为什么需要child-process?","i18n_question_description":"为什么需要child-process?","question_answer":"node是异步非阻塞的，这对高并发非常有效．可是我们还有其它一些常用需求，比如和操作系统shell命令交互，调用可执行文件，创建子进程进行阻塞式访问或高CPU计算等，child-process就是为满足这些需求而生的．child-process顾名思义，就是把node阻塞的工作交给子进程去做．\n","i18n_question_answer":"node是异步非阻塞的，这对高并发非常有效．可是我们还有其它一些常用需求，比如和操作系统shell命令交互，调用可执行文件，创建子进程进行阻塞式访问或高CPU计算等，child-process就是为满足这些需求而生的．child-process顾名思义，就是把node阻塞的工作交给子进程去做．\n","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"6960495402307455245","question_title":"请简述JAVAScript事件模型和事件代理","i18n_question_title":"请简述JAVAScript事件模型和事件代理","question_skill_list":[{"name":"事件","i18n_name":"事件","nick_name":null,"description":null},{"name":"JavaScript","i18n_name":"JavaScript","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"简述一下JavaScript事件模型和事件代理，事件代理有哪些优点？","i18n_question_description":"简述一下JavaScript事件模型和事件代理，事件代理有哪些优点？","question_answer":"## 事件模型\n事件三个阶段：事件捕获，目标，事件冒泡（低版本ie不支持捕获阶段）\n## 事件代理及优点： \n把事件委托到其父对象上，借助事件冒泡机制，实现对节点的事件代理。  \n### 优点  \n*  可以大量节省内存占用，减少事件注册\n*  当新增子对象时无需再次对其绑定事件，对于动态内容部分尤为合适\n总分4分，了解事件模型给+1分，了解事件代理+1，优点说出一项+1\n事件模型三个要素，说错一项-0.5分","i18n_question_answer":"## 事件模型\n事件三个阶段：事件捕获，目标，事件冒泡（低版本ie不支持捕获阶段）\n## 事件代理及优点： \n把事件委托到其父对象上，借助事件冒泡机制，实现对节点的事件代理。  \n### 优点  \n*  可以大量节省内存占用，减少事件注册\n*  当新增子对象时无需再次对其绑定事件，对于动态内容部分尤为合适\n总分4分，了解事件模型给+1分，了解事件代理+1，优点说出一项+1\n事件模型三个要素，说错一项-0.5分","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"7034445587425543710","question_title":"编码-js高阶函数考察","i18n_question_title":"编码-js高阶函数考察","question_skill_list":[{"name":"JavaScript","i18n_name":"JavaScript","nick_name":null,"description":null},{"name":"函数式","i18n_name":"函数式","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"实现一个repeat方法，要求如下：\n// 需要实现的函数\nfunction repeat (func, times, wait) {\n // 补全\n}\n// 使下面调用代码能正常工作\nconst repeatFunc = repeat(console.log, 4, 3000);\nrepeatFunc(\"hello world\");    //会输出4次 hello world, 每次间隔3秒","i18n_question_description":"实现一个repeat方法，要求如下：\n// 需要实现的函数\nfunction repeat (func, times, wait) {\n // 补全\n}\n// 使下面调用代码能正常工作\nconst repeatFunc = repeat(console.log, 4, 3000);\nrepeatFunc(\"hello world\");    //会输出4次 hello world, 每次间隔3秒","question_answer":"{\"0\":{\"ops\":[{\"insert\":\"考点1：能意识到repeat返回的是一个函数，知道参数怎么传递。\\n\"},{\"insert\":\"考点2：setTimeout的时间，微任务\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"function repeat(fn, times, wait) {\\n\"},{\"insert\":\" if(typeof times !== 'number') return;\\n\"},{\"insert\":\" if(typeof wait !== 'number') return;\\n\"},{\"insert\":\" return function(str){\\n\"},{\"insert\":\" for(let i = 0; i < times; i++){\\n\"},{\"insert\":\" setTimeout(()=>{\\n\"},{\"insert\":\" fn(str)\\n\"},{\"insert\":\" }, i * wait)\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"\\n\"}],\"zoneId\":\"0\",\"zoneType\":\"Z\"}}","i18n_question_answer":"{\"0\":{\"ops\":[{\"insert\":\"考点1：能意识到repeat返回的是一个函数，知道参数怎么传递。\\n\"},{\"insert\":\"考点2：setTimeout的时间，微任务\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"function repeat(fn, times, wait) {\\n\"},{\"insert\":\" if(typeof times !== 'number') return;\\n\"},{\"insert\":\" if(typeof wait !== 'number') return;\\n\"},{\"insert\":\" return function(str){\\n\"},{\"insert\":\" for(let i = 0; i < times; i++){\\n\"},{\"insert\":\" setTimeout(()=>{\\n\"},{\"insert\":\" fn(str)\\n\"},{\"insert\":\" }, i * wait)\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\" }\\n\"},{\"insert\":\"\\n\"},{\"insert\":\"\\n\"}],\"zoneId\":\"0\",\"zoneType\":\"Z\"}}","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"7021058239916983844","question_title":"babel的作用和配置","i18n_question_title":"babel的作用和配置","question_skill_list":[{"name":"JavaScript","i18n_name":"JavaScript","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"1. 平时开发有有用过babel么，作用是什么？\n2. 下面这个babel配置文件作用是什么：\n```js\n{\n    \"presets\": [\n        \"es2015\"，\n        \"react\",\n        \"stage-0\"\n    ],\n    \"plugins\": []\n}\n```\n3. stage可以取哪些值，作用是什么？","i18n_question_description":"1. 平时开发有有用过babel么，作用是什么？\n2. 下面这个babel配置文件作用是什么：\n```js\n{\n    \"presets\": [\n        \"es2015\"，\n        \"react\",\n        \"stage-0\"\n    ],\n    \"plugins\": []\n}\n```\n3. stage可以取哪些值，作用是什么？","question_answer":"* 配置解释\n```js\n{\n    \"presets\": [\n        \"es2015\"， // 预加载es6编译的模块\n        \"react\",   // 预加载react编译的模块\n        \"stage-0\"  // 预加载es7编译的模块\n    ],\n    \"plugins\": []\n}\n```\n* es7不同阶段语法提案的转码规则模块（共有4个阶段），分别是stage-0，stage-1，stage-2，stage-3。\n\n1. 2.5分及以下：没有babel概念\n2. 3.0分：有基本的babel概念，回答出配置作用\n3. 3.5分：有使用babel的实践经验，详细解释配置的作用及注意点\n4. 4.0分：","i18n_question_answer":"* 配置解释\n```js\n{\n    \"presets\": [\n        \"es2015\"， // 预加载es6编译的模块\n        \"react\",   // 预加载react编译的模块\n        \"stage-0\"  // 预加载es7编译的模块\n    ],\n    \"plugins\": []\n}\n```\n* es7不同阶段语法提案的转码规则模块（共有4个阶段），分别是stage-0，stage-1，stage-2，stage-3。\n\n1. 2.5分及以下：没有babel概念\n2. 3.0分：有基本的babel概念，回答出配置作用\n3. 3.5分：有使用babel的实践经验，详细解释配置的作用及注意点\n4. 4.0分：","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"6960495402307586317","question_title":"请介绍react diff算法和策略","i18n_question_title":"请介绍react diff算法和策略","question_skill_list":[{"name":"React","i18n_name":"React","nick_name":null,"description":null},{"name":"框架","i18n_name":"框架","nick_name":null,"description":null},{"name":"JavaScript","i18n_name":"JavaScript","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"react的diff算法和策略了解多少，为什么react的diff性能好，遵循什么样的策略可以把 O(n3) 复杂度的问题转换成 O(n) 复杂度的问题","i18n_question_description":"react的diff算法和策略了解多少，为什么react的diff性能好，遵循什么样的策略可以把 O(n3) 复杂度的问题转换成 O(n) 复杂度的问题","question_answer":"React分别对 tree diff、component diff 以及 element diff做了算法优化，\n做了一些假设\n1.Web UI 中 DOM 节点跨层级的移动操作特别少，可以忽略不计\n2.拥有相同类的两个组件将会生成相似的树形结构，拥有不同类的两个组件将会生成不同的树形结构\n3.对于同一层级的一组子节点，它们可以通过唯一 id 进行区分\ntree diff：React 对树的算法进行了简洁明了的优化，即对树进行分层比较，两棵树只会对同一层次的节点进行比较\ncomponent diff：\na.如果是同一类型的组件，按照原策略继续比较 virtual DOM tree。\nb.如果不是，则将该组件判断为 dirty component，从而替换整个组件下的所有子节点。\nc.对于同一类型的组件，有可能其 Virtual DOM 没有任何变化，如果能够确切的知道这点那可以节省大量的 diff 运算时间，因此 React 允许用户通过 shouldComponentUpdate() 来判断该组件是否需要进行 diff\nelement diff：\n允许开发者对同一层级的同组子节点，添加唯一 key 进行区分，减少增加和删除\n\n1. 2.5分及以下：对于diff策略完全不了解，不知道改变后会触发哪些生命周期\n2. 3.0分：可以描述一部分策略，提供优化思路\n3. 3.5分：专门看过相关的介绍并可以入手在减少节点移动和减少重复渲染上做过努力\n4. 4.0分：在满足3.5基础上，对diff算法有较深入的代码层面的了解","i18n_question_answer":"React分别对 tree diff、component diff 以及 element diff做了算法优化，\n做了一些假设\n1.Web UI 中 DOM 节点跨层级的移动操作特别少，可以忽略不计\n2.拥有相同类的两个组件将会生成相似的树形结构，拥有不同类的两个组件将会生成不同的树形结构\n3.对于同一层级的一组子节点，它们可以通过唯一 id 进行区分\ntree diff：React 对树的算法进行了简洁明了的优化，即对树进行分层比较，两棵树只会对同一层次的节点进行比较\ncomponent diff：\na.如果是同一类型的组件，按照原策略继续比较 virtual DOM tree。\nb.如果不是，则将该组件判断为 dirty component，从而替换整个组件下的所有子节点。\nc.对于同一类型的组件，有可能其 Virtual DOM 没有任何变化，如果能够确切的知道这点那可以节省大量的 diff 运算时间，因此 React 允许用户通过 shouldComponentUpdate() 来判断该组件是否需要进行 diff\nelement diff：\n允许开发者对同一层级的同组子节点，添加唯一 key 进行区分，减少增加和删除\n\n1. 2.5分及以下：对于diff策略完全不了解，不知道改变后会触发哪些生命周期\n2. 3.0分：可以描述一部分策略，提供优化思路\n3. 3.5分：专门看过相关的介绍并可以入手在减少节点移动和减少重复渲染上做过努力\n4. 4.0分：在满足3.5基础上，对diff算法有较深入的代码层面的了解","status_end_time":null,"assessment_create_time":null},{"id":null,"assessment_status":1,"target_id":"7073761953432652039","target_type":1,"minutes":null,"question_id":"6960495402307881229","question_title":"请问判断一个对象是否是数组","i18n_question_title":"请问判断一个对象是否是数组","question_skill_list":[{"name":"js","i18n_name":"js","nick_name":null,"description":null},{"name":"语言基础","i18n_name":"语言基础","nick_name":null,"description":null}],"score":null,"content":null,"question_description":"判断一个对象是否是数组 typeof \\[\\]结果是什么？","i18n_question_description":"判断一个对象是否是数组 typeof \\[\\]结果是什么？","question_answer":"基础题目考察对es5 api的了解以及 toString的了解\n  Array.isArray \n  Object.prototype.toString.call === \\[object Array\\]\n  instanceof\n  \n  typeof \\[\\] 结果为object","i18n_question_answer":"基础题目考察对es5 api的了解以及 toString的了解\n  Array.isArray \n  Object.prototype.toString.call === \\[object Array\\]\n  instanceof\n  \n  typeof \\[\\] 结果为object","status_end_time":null,"assessment_create_time":null}],"BaseResp":{"StatusMessage":"SUCCESS","StatusCode":0,"Extra":null}},"message":"OK","special_case_code":0}
